{"name": "test_interaction", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_021_channelCheck.Test_channelCheck object at 0x000001487E2A3B70>\n\n    @allure.story('互动通知channel')\n    def test_interaction(self):\n        with allure.step('进入消息页面'):\n>           self.page.message().click_messageBtn()\n\ntest_021_channelCheck.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\message_interaction\\message_page.py:23: in click_messageBtn\n    self.click(self.messageBtn)\n..\\base\\base_action.py:27: in click\n    self.find_element(feature).click()\n..\\base\\base_action.py:22: in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f95ac0ad-807a-4c9c-b5a2-257254b7931d\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x000001487E1F86A8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "进入消息页面", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\jenkins\\workspace\\Timing\\scripts\\test_021_channelCheck.py\", line 40, in test_interaction\n    self.page.message().click_messageBtn()\n  File \"D:\\jenkins\\workspace\\Timing\\Pages\\message_interaction\\message_page.py\", line 23, in click_messageBtn\n    self.click(self.messageBtn)\n  File \"D:\\jenkins\\workspace\\Timing\\base\\base_action.py\", line 27, in click\n    self.find_element(feature).click()\n  File \"D:\\jenkins\\workspace\\Timing\\base\\base_action.py\", line 22, in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n  File \"d:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1587037611542, "stop": 1587037642775}], "start": 1587037611542, "stop": 1587037642775, "uuid": "8af57184-4dff-4f20-b73e-c5acd81802dd", "historyId": "7756e9d1712a198e75d266281d84377e", "testCaseId": "4877922e02a192d88bfdfc1360c24518", "fullName": "test_021_channelCheck.Test_channelCheck#test_interaction", "labels": [{"name": "story", "value": "互动通知channel"}, {"name": "feature", "value": "消息页channel展示"}, {"name": "suite", "value": "test_021_channelCheck"}, {"name": "subSuite", "value": "Test_channelCheck"}, {"name": "host", "value": "PV-X00232293"}, {"name": "thread", "value": "6172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_021_channelCheck"}]}