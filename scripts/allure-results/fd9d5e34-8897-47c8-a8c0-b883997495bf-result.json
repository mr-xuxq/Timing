{"name": "test_browsesVlog", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_011_browsesVlog.Test_browsesVlog object at 0x0000021ACA3402E0>\n\n    def test_browsesVlog(self):\n        with allure.step('点击进入发现页'):\n            self.page.shouye().click_friendCircle()\n            self.page.discover().tapScreen(0.21,0.07)\n        with allure.step('点击sVlog标题'):\n            if self.page.discover().check_sVlogAuthor() == True:\n                self.page.discover().click_sVlogGif()\n            else:\n                self.page.discover().swipeUp()\n>               self.page.discover().click_sVlogGif()\n\ntest_011_browsesVlog.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\browse_information\\discover_page.py:49: in click_sVlogGif\n    self.click(self.sVlogGif)\n..\\base\\base_action.py:27: in click\n    self.find_element(feature).click()\n..\\base\\base_action.py:22: in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"96f482ca-1619-4789-a9da-4dfee1b8c9d8\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x0000021ACA332670>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "点击进入发现页", "status": "passed", "start": 1616937037171, "stop": 1616937040965}, {"name": "点击sVlog标题", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\Jenkins\\workspace\\Timing\\scripts\\test_011_browsesVlog.py\", line 32, in test_browsesVlog\n    self.page.discover().click_sVlogGif()\n  File \"D:\\Jenkins\\workspace\\Timing\\Pages\\browse_information\\discover_page.py\", line 49, in click_sVlogGif\n    self.click(self.sVlogGif)\n  File \"D:\\Jenkins\\workspace\\Timing\\base\\base_action.py\", line 27, in click\n    self.find_element(feature).click()\n  File \"D:\\Jenkins\\workspace\\Timing\\base\\base_action.py\", line 22, in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n  File \"c:\\python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1616937040965, "stop": 1616937147414}], "start": 1616937037171, "stop": 1616937147429, "uuid": "ba254201-aed1-4801-8c7c-3d5a75bf4d72", "historyId": "58a35e78c95610b9a2577f96444cd07a", "testCaseId": "49138991302ed42b6d3359e091f649b4", "fullName": "test_011_browsesVlog.Test_browsesVlog#test_browsesVlog", "labels": [{"name": "suite", "value": "test_011_browsesVlog"}, {"name": "subSuite", "value": "Test_browsesVlog"}, {"name": "host", "value": "WINDOWS-49AO44L"}, {"name": "thread", "value": "10292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_011_browsesVlog"}]}