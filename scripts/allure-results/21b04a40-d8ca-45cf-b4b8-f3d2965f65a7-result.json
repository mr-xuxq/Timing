{"name": "test_videoRecordTiming", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_053_videoRecordTiming.Test_videoRecordTiming object at 0x00000224030ABA90>\n\n    @allure.story('视频打卡操作')\n    def test_videoRecordTiming(self):\n        with allure.step('进入更多页面'):\n            self.page.more().click_more(More.moreBtn)\n            time.sleep(5)\n        with allure.step('滑动更多页面至底部'):\n            self.page.more().swipeByMy(0.5, 0.9, 0.5, 0.4, 200)\n        with allure.step('点击视频打卡按钮，设定内容后开始'):\n            self.page.more().click_more(More.videoBtn)\n>           self.page.timing().input_ContentBox(Timing.videoContentBox, 'This is videoTiming')\n\ntest_053_videoRecordTiming.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\timed_learning\\timing_page.py:65: in input_ContentBox\n    self.input(target,content)\n..\\base\\base_action.py:43: in input\n    self.find_element(feature).send_keys(content)\n..\\base\\base_action.py:22: in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e2c188b-2977-47b6-80d2-e4aab37c43b4\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x00000224041660D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "进入更多页面", "status": "passed", "start": 1586147817930, "stop": 1586147838179}, {"name": "滑动更多页面至底部", "status": "passed", "start": 1586147838179, "stop": 1586147838324}, {"name": "点击视频打卡按钮，设定内容后开始", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\jenkins\\workspace\\Timing\\scripts\\test_053_videoRecordTiming.py\", line 31, in test_videoRecordTiming\n    self.page.timing().input_ContentBox(Timing.videoContentBox, 'This is videoTiming')\n  File \"D:\\jenkins\\workspace\\Timing\\Pages\\timed_learning\\timing_page.py\", line 65, in input_ContentBox\n    self.input(target,content)\n  File \"D:\\jenkins\\workspace\\Timing\\base\\base_action.py\", line 43, in input\n    self.find_element(feature).send_keys(content)\n  File \"D:\\jenkins\\workspace\\Timing\\base\\base_action.py\", line 22, in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n  File \"d:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1586147838324, "stop": 1586147892837}], "start": 1586147817930, "stop": 1586147892837, "uuid": "6ff9f13f-d95a-4f28-958e-1c3f2507a40b", "historyId": "51867c13abb9a21a0481d8e2b12818f2", "testCaseId": "2be172922223ab5f35ed12354b0da25c", "fullName": "test_053_videoRecordTiming.Test_videoRecordTiming#test_videoRecordTiming", "labels": [{"name": "feature", "value": "视频打卡功能"}, {"name": "story", "value": "视频打卡操作"}, {"name": "suite", "value": "test_053_videoRecordTiming"}, {"name": "subSuite", "value": "Test_videoRecordTiming"}, {"name": "host", "value": "PV-X00232293"}, {"name": "thread", "value": "7236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_053_videoRecordTiming"}]}