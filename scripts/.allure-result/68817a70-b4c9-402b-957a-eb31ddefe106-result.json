{"name": "test_chatVideo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.", "trace": "self = <scripts.test_chat.Test_chat object at 0x00000251B11A6CF8>\n\n    @allure.story('视频聊天')\n    def test_chatVideo(self):\n        with allure.step('进入消息页面'):\n            self.page.message().click_message(Message.messageBtn)\n        with allure.step('滑动消息页面寻找第一个道友'):\n            i = 0\n            while i < 2:\n                if self.page.message().waitAndfind(Message.messageFriend, 1) == True:\n                    break\n                else:\n                    self.page.message().swipeByMy(0.5, 0.7, 0.5, 0.3, 150)\n                    i += 1\n        with allure.step('找到道友后点击channel进入聊天页面'):\n            self.page.message().click_message(Message.messageFriend)\n        with allure.step('点击聊天页面添加按钮'):\n            self.driver.tap([(998, 2272), (1000, 2282)], 500)\n        with allure.step('选择视频'):\n>           self.driver.tap([(387, 1865), (388, 1866)], 500)\n\ntest_chat.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nd:\\python37\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py:100: in tap\n    ma.perform()\nd:\\python37\\lib\\site-packages\\appium\\webdriver\\common\\multi_action.py:63: in perform\n    self._driver.execute(Command.MULTI_ACTION, self.json_wire_gestures)\nd:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\nd:\\python37\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:29: in check_response\n    raise wde\nd:\\python37\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:24: in check_response\n    super(MobileErrorHandler, self).check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000251B11A65F8>\nresponse = {'status': 500, 'value': '{\"status\":13,\"value\":{\"message\":\"An unknown server-side error occurred while processing the command.\",\"origValue\":\"Unable to perform multi pointer gesture\"},\"sessionId\":\"b23c7748-6e19-4d82-bcda-8c1b963a59fc\"}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.\n\nd:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException"}, "steps": [{"name": "进入消息页面", "status": "passed", "start": 1585141790540, "stop": 1585141794834}, {"name": "滑动消息页面寻找第一个道友", "status": "passed", "start": 1585141794834, "stop": 1585141795890}, {"name": "找到道友后点击channel进入聊天页面", "status": "passed", "start": 1585141795890, "stop": 1585141798172}, {"name": "点击聊天页面添加按钮", "status": "passed", "start": 1585141798172, "stop": 1585141798771}, {"name": "选择视频", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.\n\n", "trace": "  File \"C:\\Users\\荣幸如\\Documents\\工作相关\\Timing-miss-rxr\\scripts\\test_chat.py\", line 88, in test_chatVideo\n    self.driver.tap([(387, 1865), (388, 1866)], 500)\n  File \"d:\\python37\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py\", line 100, in tap\n    ma.perform()\n  File \"d:\\python37\\lib\\site-packages\\appium\\webdriver\\common\\multi_action.py\", line 63, in perform\n    self._driver.execute(Command.MULTI_ACTION, self.json_wire_gestures)\n  File \"d:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\python37\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 29, in check_response\n    raise wde\n  File \"d:\\python37\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 24, in check_response\n    super(MobileErrorHandler, self).check_response(response)\n  File \"d:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1585141798771, "stop": 1585141798945}], "start": 1585141790540, "stop": 1585141798948, "uuid": "b3e11ee6-a8b1-4583-a3fb-1eb89ea451bc", "historyId": "ee5334c8b73d1380c17c28db89fc12c8", "testCaseId": "c9c07477afad8ecafee2455dd5e21cfe", "fullName": "test_chat.Test_chat#test_chatVideo", "labels": [{"name": "feature", "value": "聊天页功能"}, {"name": "story", "value": "视频聊天"}, {"name": "suite", "value": "test_chat"}, {"name": "subSuite", "value": "Test_chat"}, {"name": "host", "value": "LAPTOP-1540DPHQ"}, {"name": "thread", "value": "6752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_chat"}]}