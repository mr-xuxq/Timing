{"name": "test_timing", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_timing.Test_timing object at 0x0000028751CD0B00>\n\n    def test_timing(self):\n        self.page.more().click_more(moreBtn)\n        time.sleep(5)\n        self.page.more().swipeByMy(0.5, 0.9, 0.5, 0.4, 200)\n        self.page.more().click_more(timingBtn)\n        self.page.more().input_ContentBox(studyContentBox, 'This is Timing')\n        self.page.more().click_more(studySettingBtn)\n        time.sleep(5)\n        self.page.more().swipeByMy(0.6, 0.8, 0.6, 0.75, 150)\n        self.page.more().click_more(studySettingsuccessBtn)\n>       self.page.more().click_more(startTimingBtn)\n\ntest_timing.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\more_page.py:8: in click_more\n    self.click(target)\n..\\base\\base_action.py:24: in click\n    self.find_element(feature).click()\n..\\base\\base_action.py:16: in find_element\n    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(by, value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fcfd2009-41ad-4241-881d-d16e03114e8b\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x0000028751A86840>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1584339916681, "stop": 1584340006173, "uuid": "50aaa557-aee6-4775-90b7-fb199eac23c2", "historyId": "b8b25602d8db4a8a73d616b03d0653cc", "testCaseId": "b0d7d5ee8dcff93517ec29e67b770b82", "fullName": "test_timing.Test_timing#test_timing", "labels": [{"name": "suite", "value": "test_timing"}, {"name": "subSuite", "value": "Test_timing"}, {"name": "host", "value": "LAPTOP-1540DPHQ"}, {"name": "thread", "value": "3772-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_timing"}]}