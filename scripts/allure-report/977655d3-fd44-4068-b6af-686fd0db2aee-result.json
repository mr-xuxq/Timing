{"name": "test_registerAccount", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_001_registerAccount.Test_registerAccount object at 0x0000021A9F3890B8>\n\n    def test_registerAccount(self):\n        with allure.step('点击手机号登录'):\n>           self.page.login().click_phone_login()\n\ntest_001_registerAccount.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\register_login\\login_page.py:45: in click_phone_login\n    self.click(self.phoneBtn)\n..\\base\\base_action.py:39: in click\n    self.find_element(feature).click()\n..\\base\\base_action.py:22: in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1a5448f6-4c62-4267-8e93-5978c101a5a9\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x0000021A9E634E18>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "点击手机号登录", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\Timing\\scripts\\test_001_registerAccount.py\", line 32, in test_registerAccount\n    self.page.login().click_phone_login()\n  File \"D:\\Timing\\Pages\\register_login\\login_page.py\", line 45, in click_phone_login\n    self.click(self.phoneBtn)\n  File \"D:\\Timing\\base\\base_action.py\", line 39, in click\n    self.find_element(feature).click()\n  File \"D:\\Timing\\base\\base_action.py\", line 22, in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1587000806045, "stop": 1587000863410}], "start": 1587000806045, "stop": 1587000863434, "uuid": "e64d99e8-7bd8-46d9-9c7f-19c2ecbfcc2d", "historyId": "70208ecb89cae63421bdb3a7ce67b14a", "testCaseId": "99d025376bb24dd8261c1137c8f8bab7", "fullName": "test_001_registerAccount.Test_registerAccount#test_registerAccount", "labels": [{"name": "suite", "value": "test_001_registerAccount"}, {"name": "subSuite", "value": "Test_registerAccount"}, {"name": "host", "value": "PC-201905121411"}, {"name": "thread", "value": "1732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_001_registerAccount"}]}