{"name": "test_sleepRecord", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test_054_sleepRecord.Test_sleepRecord object at 0x0000018535DE18D0>\n\n    @allure.story('睡觉后再起床操作')\n    def test_sleepRecord(self):\n        with allure.step('进入更多页面'):\n            self.page.more().click_more(More.moreBtn)\n            time.sleep(5)\n        with allure.step('滑动更多页面至底部'):\n            self.page.more().swipeByMy(0.5, 0.9, 0.5, 0.4, 200)\n        with allure.step('点击睡觉按钮，进入睡觉页面'):\n            self.page.more().click_more(More.sleepBtn)\n            # 点击【睡觉actionbar】\n            self.driver.tap([(329, 1969), (481, 2013)], 500)\n            time.sleep(5)\n            with allure.step('进入睡觉页面后关闭睡觉打卡弹窗，并点击起床'):\n                while self.page.timing().waitAndfind(Timing.sleepingClose, 1) == True:\n                    self.page.timing().click_timing(Timing.sleepingClose)\n>                   self.page.timing().click_timing(Timing.sleepingWake)\n\ntest_054_sleepRecord.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\timed_learning\\timing_page.py:55: in click_timing\n    self.click(target)\n..\\base\\base_action.py:39: in click\n    self.find_element(feature).click()\n..\\base\\base_action.py:22: in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"698fbf82-e767-45c7-aebd-254e37485f6a\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x0000018535F050D0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "进入更多页面", "status": "passed", "start": 1586141193682, "stop": 1586141210407}, {"name": "滑动更多页面至底部", "status": "passed", "start": 1586141210407, "stop": 1586141210606}, {"name": "点击睡觉按钮，进入睡觉页面", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\Timing\\scripts\\test_054_sleepRecord.py\", line 34, in test_sleepRecord\n    self.page.timing().click_timing(Timing.sleepingWake)\n  File \"D:\\Timing\\Pages\\timed_learning\\timing_page.py\", line 55, in click_timing\n    self.click(target)\n  File \"D:\\Timing\\base\\base_action.py\", line 39, in click\n    self.find_element(feature).click()\n  File \"D:\\Timing\\base\\base_action.py\", line 22, in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "进入睡觉页面后关闭睡觉打卡弹窗，并点击起床", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\Timing\\scripts\\test_054_sleepRecord.py\", line 34, in test_sleepRecord\n    self.page.timing().click_timing(Timing.sleepingWake)\n  File \"D:\\Timing\\Pages\\timed_learning\\timing_page.py\", line 55, in click_timing\n    self.click(target)\n  File \"D:\\Timing\\base\\base_action.py\", line 39, in click\n    self.find_element(feature).click()\n  File \"D:\\Timing\\base\\base_action.py\", line 22, in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1586141216862, "stop": 1586141276442}], "start": 1586141210606, "stop": 1586141276442}], "start": 1586141193682, "stop": 1586141276443, "uuid": "6f7b3b50-0bed-4ad7-9286-39e4dfad47f7", "historyId": "5b73c6119d9474dd20623f16f3d86122", "testCaseId": "2e9e6138af05785b4158d468f22bd659", "fullName": "test_054_sleepRecord.Test_sleepRecord#test_sleepRecord", "labels": [{"name": "feature", "value": "计时功能"}, {"name": "story", "value": "睡觉后再起床操作"}, {"name": "suite", "value": "test_054_sleepRecord"}, {"name": "subSuite", "value": "Test_sleepRecord"}, {"name": "host", "value": "PC-201905121411"}, {"name": "thread", "value": "3860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_054_sleepRecord"}]}