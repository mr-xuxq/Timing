{"name": "test_browseShowye", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.", "trace": "self = <scripts.test_014_browseShouye.Test_browseShowye object at 0x00000120689F5978>\n\n    def test_browseShowye(self):\n        time.sleep(5)\n        with allure.step('检测登陆状态'):\n            result = self.page.shouye().check_shouye()\n            if result == True:\n                with allure.step('登陆到首页成功，开始浏览'):\n                    i = 0\n                    while i<50:\n>                       self.page.shouye().swipeByShouye()\n\ntest_014_browseShouye.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\browse_information\\shouye_page.py:52: in swipeByShouye\n    self.swipeOperat(0.5, 0.8, 0.5, 0.2,500)\n..\\base\\base_action.py:61: in swipeOperat\n    self.driver.swipe(X1, Y1, X2, Y2, t)\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py:127: in swipe\n    action.perform()\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\common\\touch_action.py:136: in perform\n    self._driver.execute(Command.TOUCH_ACTION, params)\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:29: in check_response\n    raise wde\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:24: in check_response\n    super(MobileErrorHandler, self).check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000012068A94978>\nresponse = {'status': 500, 'value': '{\"status\":13,\"value\":{\"message\":\"An unknown server-side error occurred while processing the ...ecting to another application requires INJECT_EVENTS permission\"},\"sessionId\":\"c6924dd3-dfd9-4379-bacf-770c3c482fed\"}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.\n\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException"}, "steps": [{"name": "检测登陆状态", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.\n\n", "trace": "  File \"D:\\Timing\\scripts\\test_014_browseShouye.py\", line 23, in test_browseShowye\n    self.page.shouye().swipeByShouye()\n  File \"D:\\Timing\\Pages\\browse_information\\shouye_page.py\", line 52, in swipeByShouye\n    self.swipeOperat(0.5, 0.8, 0.5, 0.2,500)\n  File \"D:\\Timing\\base\\base_action.py\", line 61, in swipeOperat\n    self.driver.swipe(X1, Y1, X2, Y2, t)\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py\", line 127, in swipe\n    action.perform()\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\common\\touch_action.py\", line 136, in perform\n    self._driver.execute(Command.TOUCH_ACTION, params)\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 29, in check_response\n    raise wde\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 24, in check_response\n    super(MobileErrorHandler, self).check_response(response)\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "登陆到首页成功，开始浏览", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command.\n\n", "trace": "  File \"D:\\Timing\\scripts\\test_014_browseShouye.py\", line 23, in test_browseShowye\n    self.page.shouye().swipeByShouye()\n  File \"D:\\Timing\\Pages\\browse_information\\shouye_page.py\", line 52, in swipeByShouye\n    self.swipeOperat(0.5, 0.8, 0.5, 0.2,500)\n  File \"D:\\Timing\\base\\base_action.py\", line 61, in swipeOperat\n    self.driver.swipe(X1, Y1, X2, Y2, t)\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py\", line 127, in swipe\n    action.perform()\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\common\\touch_action.py\", line 136, in perform\n    self._driver.execute(Command.TOUCH_ACTION, params)\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 29, in check_response\n    raise wde\n  File \"d:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 24, in check_response\n    super(MobileErrorHandler, self).check_response(response)\n  File \"d:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1587135644373, "stop": 1587135651829}], "start": 1587135642372, "stop": 1587135651848}], "start": 1587135637370, "stop": 1587135651849, "uuid": "fa6cbd80-60eb-4c95-a21c-d702395f573a", "historyId": "8a9c0a89d45e7d8b7b9862e7c710b6c7", "testCaseId": "b862a3ccb6746ff6681c957925e0708c", "fullName": "test_014_browseShouye.Test_browseShowye#test_browseShowye", "labels": [{"name": "feature", "value": "刷首页算法"}, {"name": "suite", "value": "test_014_browseShouye"}, {"name": "subSuite", "value": "Test_browseShowye"}, {"name": "host", "value": "PC-201905121411"}, {"name": "thread", "value": "10744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_014_browseShouye"}]}