{"name": "test_timingService", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n +  where False = <bound method Message.waitAndfind_timingService of <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>>()\n +    where <bound method Message.waitAndfind_timingService of <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>> = <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>.waitAndfind_timingService\n +      where <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860> = <bound method Page.message of <Pages.page.Page object at 0x000001FC45439438>>()\n +        where <bound method Page.message of <Pages.page.Page object at 0x000001FC45439438>> = <Pages.page.Page object at 0x000001FC45439438>.message\n +          where <Pages.page.Page object at 0x000001FC45439438> = <scripts.test_021_channelCheck.Test_channelCheck object at 0x000001FC45434358>.page", "trace": "self = <scripts.test_021_channelCheck.Test_channelCheck object at 0x000001FC45434358>\n\n    @allure.story('Timing小书童channel')\n    def test_timingService(self):\n        with allure.step('进入消息页面'):\n            self.page.message().click_messageBtn()\n        with allure.step('滑动寻找Timing小书童channel'):\n            i = 0\n            while i < 3:\n                # 如果在规定时间找到该元素，则跳出循环\n                if self.page.message().check_timingService()== True:\n                    break\n                # 如果没有找到，向上滑动页面继续找\n                else:\n                    self.page.message().swipeByMessage()\n                    i += 1\n        with allure.step('校验结果'):\n>           assert self.page.message().waitAndfind_timingService()== True\nE           assert False == True\nE            +  where False = <bound method Message.waitAndfind_timingService of <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>>()\nE            +    where <bound method Message.waitAndfind_timingService of <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>> = <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>.waitAndfind_timingService\nE            +      where <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860> = <bound method Page.message of <Pages.page.Page object at 0x000001FC45439438>>()\nE            +        where <bound method Page.message of <Pages.page.Page object at 0x000001FC45439438>> = <Pages.page.Page object at 0x000001FC45439438>.message\nE            +          where <Pages.page.Page object at 0x000001FC45439438> = <scripts.test_021_channelCheck.Test_channelCheck object at 0x000001FC45434358>.page\n\ntest_021_channelCheck.py:37: AssertionError"}, "steps": [{"name": "进入消息页面", "status": "passed", "start": 1586943894658, "stop": 1586943898253}, {"name": "滑动寻找Timing小书童channel", "status": "passed", "start": 1586943898253, "stop": 1586943900176}, {"name": "校验结果", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n +  where False = <bound method Message.waitAndfind_timingService of <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>>()\n +    where <bound method Message.waitAndfind_timingService of <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>> = <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860>.waitAndfind_timingService\n +      where <Pages.message_interaction.message_page.Message object at 0x000001FC4299F860> = <bound method Page.message of <Pages.page.Page object at 0x000001FC45439438>>()\n +        where <bound method Page.message of <Pages.page.Page object at 0x000001FC45439438>> = <Pages.page.Page object at 0x000001FC45439438>.message\n +          where <Pages.page.Page object at 0x000001FC45439438> = <scripts.test_021_channelCheck.Test_channelCheck object at 0x000001FC45434358>.page\n", "trace": "  File \"D:\\Timing\\scripts\\test_021_channelCheck.py\", line 37, in test_timingService\n    assert self.page.message().waitAndfind_timingService()== True\n"}, "start": 1586943900176, "stop": 1586943931638}], "start": 1586943894658, "stop": 1586943931639, "uuid": "c463f621-5c4c-4dab-8c5d-5978a85c56ac", "historyId": "87a51570a60f2340ae75ec89dbbec23d", "testCaseId": "c29af502e0c10517d7163856b4be2bda", "fullName": "test_021_channelCheck.Test_channelCheck#test_timingService", "labels": [{"name": "story", "value": "Timing小书童channel"}, {"name": "feature", "value": "消息页channel展示"}, {"name": "suite", "value": "test_021_channelCheck"}, {"name": "subSuite", "value": "Test_channelCheck"}, {"name": "host", "value": "PC-201905121411"}, {"name": "thread", "value": "6768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_021_channelCheck"}]}