{
  "uid" : "f626014738e3cdb4",
  "name" : "test_genderInfo",
  "fullName" : "test_041_changePersonalInformation.Test_changePersonalInformation#test_genderInfo",
  "historyId" : "1e8bc1892d8780b08f963d533673da8b",
  "time" : {
    "start" : 1587121489606,
    "stop" : 1587121489606,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. (Original error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"C:\\Android\\android-sdk\\platform-tools\\adb.exe -s 13e2ac86 install \"C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk\"\"\nadb: failed to install C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\r\n)",
  "statusTrace" : "self = <scripts.test_041_changePersonalInformation.Test_changePersonalInformation object at 0x0000022EB18B0C88>\n\n    def setup(self):\n>       self.driver = Base().init_driver()\n\ntest_041_changePersonalInformation.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\base\\base_driver.py:22: in init_driver\n    driver = webdriver.Remote('http://127.0.0.1:4723/wd/hub', desired_caps)\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\webdriver.py:151: in __init__\n    proxy\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\webdriver.py:227: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022EB18B0400>\nresponse = {'status': 500, 'value': '{\"status\":33,\"value\":{\"message\":\"A new session could not be created. (Original error: Comman...AILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\\\\r\\\\n\"},\"sessionId\":null}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. (Original error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"C:\\Android\\android-sdk\\platform-tools\\adb.exe -s 13e2ac86 install \"C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk\"\"\nE       adb: failed to install C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\r\nE       )\n\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "修改性别信息"
  }, {
    "name" : "feature",
    "value" : "修改个人资料功能，前提：非认证账号"
  }, {
    "name" : "suite",
    "value" : "test_041_changePersonalInformation"
  }, {
    "name" : "subSuite",
    "value" : "Test_changePersonalInformation"
  }, {
    "name" : "host",
    "value" : "PC-201905121411"
  }, {
    "name" : "thread",
    "value" : "3596-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_041_changePersonalInformation"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "357b92f93f84dd9b",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. (Original error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"C:\\Android\\android-sdk\\platform-tools\\adb.exe -s 13e2ac86 install \"C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk\"\"\nadb: failed to install C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\r\n)",
      "time" : {
        "start" : 1587120870188,
        "stop" : 1587120870188,
        "duration" : 0
      }
    }, {
      "uid" : "6567acc36e92f0",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1587044927311,
        "stop" : 1587045029105,
        "duration" : 101794
      }
    }, {
      "uid" : "606db872f51c312d",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1587040765985,
        "stop" : 1587040817557,
        "duration" : 51572
      }
    }, {
      "uid" : "fcda74f3a0e39139",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1587038206416,
        "stop" : 1587038257638,
        "duration" : 51222
      }
    }, {
      "uid" : "17327db621fa5610",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1587031602384,
        "stop" : 1587031670122,
        "duration" : 67738
      }
    }, {
      "uid" : "65437a1f859edec8",
      "status" : "passed",
      "time" : {
        "start" : 1587023390173,
        "stop" : 1587023420655,
        "duration" : 30482
      }
    }, {
      "uid" : "85e1fff5388608cd",
      "status" : "passed",
      "time" : {
        "start" : 1587019875407,
        "stop" : 1587019932196,
        "duration" : 56789
      }
    }, {
      "uid" : "162a201470146aff",
      "status" : "passed",
      "time" : {
        "start" : 1587015221791,
        "stop" : 1587015251113,
        "duration" : 29322
      }
    }, {
      "uid" : "b26cbf8a77272c8e",
      "status" : "passed",
      "time" : {
        "start" : 1587011908345,
        "stop" : 1587011938967,
        "duration" : 30622
      }
    }, {
      "uid" : "3af5a2870d078723",
      "status" : "passed",
      "time" : {
        "start" : 1587009191452,
        "stop" : 1587009253681,
        "duration" : 62229
      }
    }, {
      "uid" : "6bac326c144e4173",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False == True\n  -False\n  +True",
      "time" : {
        "start" : 1586508575298,
        "stop" : 1586508655666,
        "duration" : 80368
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "6704d15e3f9a3dd6",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/30/allure/#testresult/6704d15e3f9a3dd6",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1587031602384,
          "stop" : 1587031670122,
          "duration" : 67738
        }
      }, {
        "uid" : "40bc88acac08077b",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/29/allure/#testresult/40bc88acac08077b",
        "status" : "passed",
        "time" : {
          "start" : 1587023390173,
          "stop" : 1587023420655,
          "duration" : 30482
        }
      }, {
        "uid" : "bc78c5fdfa2b5dfe",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/28/allure/#testresult/bc78c5fdfa2b5dfe",
        "status" : "passed",
        "time" : {
          "start" : 1587019875407,
          "stop" : 1587019932196,
          "duration" : 56789
        }
      }, {
        "uid" : "26a3261dbb38631b",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/27/allure/#testresult/26a3261dbb38631b",
        "status" : "passed",
        "time" : {
          "start" : 1587019875407,
          "stop" : 1587019932196,
          "duration" : 56789
        }
      }, {
        "uid" : "ed6a9c8a05417c2a",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/26/allure/#testresult/ed6a9c8a05417c2a",
        "status" : "passed",
        "time" : {
          "start" : 1587015221791,
          "stop" : 1587015251113,
          "duration" : 29322
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f626014738e3cdb4.json",
  "parameterValues" : [ ]
}