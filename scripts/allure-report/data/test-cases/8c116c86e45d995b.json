{
  "uid" : "8c116c86e45d995b",
  "name" : "test_timingService",
  "fullName" : "test_021_channelCheck.Test_channelCheck#test_timingService",
  "historyId" : "87a51570a60f2340ae75ec89dbbec23d",
  "time" : {
    "start" : 1586507712678,
    "stop" : 1586507758410,
    "duration" : 45732
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n  -False\n  +True",
  "statusTrace" : "self = <scripts.test_021_channelCheck.Test_channelCheck object at 0x0000014813260198>\n\n    @allure.story('Timing小书童channel')\n    def test_timingService(self):\n        with allure.step('进入消息页面'):\n            self.page.message().click_messageBtn()\n        with allure.step('滑动寻找Timing小书童channel'):\n            i = 0\n            while i < 3:\n                # 如果在规定时间找到该元素，则跳出循环\n                if self.page.message().check_timingService()== True:\n                    break\n                # 如果没有找到，向上滑动页面继续找\n                else:\n                    self.page.message().swipeByMessage()\n                    i += 1\n        with allure.step('校验结果'):\n>           assert self.page.message().waitAndfind_timingService()== True\nE           assert False == True\nE             -False\nE             +True\n\ntest_021_channelCheck.py:37: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n  -False\n  +True",
    "statusTrace" : "self = <scripts.test_021_channelCheck.Test_channelCheck object at 0x0000014813260198>\n\n    @allure.story('Timing小书童channel')\n    def test_timingService(self):\n        with allure.step('进入消息页面'):\n            self.page.message().click_messageBtn()\n        with allure.step('滑动寻找Timing小书童channel'):\n            i = 0\n            while i < 3:\n                # 如果在规定时间找到该元素，则跳出循环\n                if self.page.message().check_timingService()== True:\n                    break\n                # 如果没有找到，向上滑动页面继续找\n                else:\n                    self.page.message().swipeByMessage()\n                    i += 1\n        with allure.step('校验结果'):\n>           assert self.page.message().waitAndfind_timingService()== True\nE           assert False == True\nE             -False\nE             +True\n\ntest_021_channelCheck.py:37: AssertionError",
    "steps" : [ {
      "name" : "进入消息页面",
      "time" : {
        "start" : 1586507712678,
        "stop" : 1586507723729,
        "duration" : 11051
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "滑动寻找Timing小书童channel",
      "time" : {
        "start" : 1586507723729,
        "stop" : 1586507727120,
        "duration" : 3391
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "校验结果",
      "time" : {
        "start" : 1586507727120,
        "stop" : 1586507758410,
        "duration" : 31290
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert False == True\n  -False\n  +True\n",
      "statusTrace" : "  File \"D:\\jenkins\\workspace\\Timing\\scripts\\test_021_channelCheck.py\", line 37, in test_timingService\n    assert self.page.message().waitAndfind_timingService()== True\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Timing小书童channel"
  }, {
    "name" : "feature",
    "value" : "消息页channel展示"
  }, {
    "name" : "suite",
    "value" : "test_021_channelCheck"
  }, {
    "name" : "subSuite",
    "value" : "Test_channelCheck"
  }, {
    "name" : "host",
    "value" : "PV-X00232293"
  }, {
    "name" : "thread",
    "value" : "11500-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_021_channelCheck"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5a0e366a2ee2890f",
      "status" : "passed",
      "time" : {
        "start" : 1586158951701,
        "stop" : 1586158961163,
        "duration" : 9462
      }
    }, {
      "uid" : "a1408a19f50d15c8",
      "status" : "passed",
      "time" : {
        "start" : 1586146733018,
        "stop" : 1586146738744,
        "duration" : 5726
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "bca5adb4bf276903",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/16/allure/#testresult/bca5adb4bf276903",
        "status" : "passed",
        "time" : {
          "start" : 1586158951701,
          "stop" : 1586158961163,
          "duration" : 9462
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8c116c86e45d995b.json",
  "parameterValues" : [ ]
}