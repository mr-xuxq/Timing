{
  "uid" : "2abae6ff11c725ff",
  "name" : "test_registerAccount",
  "fullName" : "test_registerAccount.Test_registerAccount#test_registerAccount",
  "historyId" : "9083d42b8698837b487d9edccb601c98",
  "time" : {
    "start" : 1579292148621,
    "stop" : 1579292219098,
    "duration" : 70477
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <scripts.test_registerAccount.Test_registerAccount object at 0x000002289D4FB9B0>\n\n    def test_registerAccount(self):\n        self.page.login().click_phone_login()                                                                           # 点击手机号登录\n        self.page.login_phone().input_phone(str(phone))                                                                 # 输入手机号\n        #self.page.login_phone().back()                                                                                  # 关小键盘\n        self.page.login_phone().click_getCaptcha()                                                                      # 点击获取验证码按钮\n        captcha = pd.read_sql('select captcha FROM t_captcha WHERE phone = \"' + str(phone) + '\" order by postTime desc',engine)\n        captcha = captcha.iloc[0, 0]                                                                                    # 正式服数据库拿验证码\n        self.page.login_phone_captcha().input_captcha(str(captcha))                                                     # 输入验证码\n        self.page.login_phone_captcha().click_loginBtn()                                                                # 点击完成，进入学习标签页\n>       self.page.register_add_tags().click_labelBtn()                                                                  # 点击选择标签\n\ntest_registerAccount.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\register_add_tags_page.py:15: in click_labelBtn\n    self.click(self.labelBtn)\n..\\base\\base_action.py:38: in click\n    self.find_element(feature).click()\n..\\base\\base_action.py:21: in find_element\n    element = WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(feature_by, feature_value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"22afad4b-4f70-43a5-9f97-1c8df99fb8f9\")>\nmethod = <function BaseAction.find_element.<locals>.<lambda> at 0x000002289D4FF730>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_registerAccount"
  }, {
    "name" : "subSuite",
    "value" : "Test_registerAccount"
  }, {
    "name" : "host",
    "value" : "PV-X00232293"
  }, {
    "name" : "thread",
    "value" : "2668-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_registerAccount"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "2abae6ff11c725ff.json",
  "parameterValues" : [ ]
}