{
  "uid" : "e55f365f99acc545",
  "name" : "test_logout",
  "fullName" : "test_002_loginByCaptcha.Test_loginByCaptcha#test_logout",
  "historyId" : "ac02c59db07adf28737882e4452f7ca5",
  "time" : {
    "start" : 1587121243960,
    "stop" : 1587121243960,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. (Original error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"C:\\Android\\android-sdk\\platform-tools\\adb.exe -s 13e2ac86 install \"C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk\"\"\nadb: failed to install C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\r\n)",
  "statusTrace" : "self = <scripts.test_002_loginByCaptcha.Test_loginByCaptcha object at 0x0000022EB179B2E8>\n\n    def setup(self):\n>       self.driver = Base().init_driver()\n\ntest_002_loginByCaptcha.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\base\\base_driver.py:22: in init_driver\n    driver = webdriver.Remote('http://127.0.0.1:4723/wd/hub', desired_caps)\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\webdriver.py:151: in __init__\n    proxy\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\nd:\\anaconda3\\lib\\site-packages\\appium\\webdriver\\webdriver.py:227: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022EB179B940>\nresponse = {'status': 500, 'value': '{\"status\":33,\"value\":{\"message\":\"A new session could not be created. (Original error: Comman...AILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\\\\r\\\\n\"},\"sessionId\":null}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. (Original error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"C:\\Android\\android-sdk\\platform-tools\\adb.exe -s 13e2ac86 install \"C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk\"\"\nE       adb: failed to install C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\r\nE       )\n\nd:\\anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_002_loginByCaptcha"
  }, {
    "name" : "subSuite",
    "value" : "Test_loginByCaptcha"
  }, {
    "name" : "host",
    "value" : "PC-201905121411"
  }, {
    "name" : "thread",
    "value" : "3596-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_002_loginByCaptcha"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "19630f7e95cb91a4",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. (Original error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"C:\\Android\\android-sdk\\platform-tools\\adb.exe -s 13e2ac86 install \"C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk\"\"\nadb: failed to install C:\\Appium\\node_modules\\appium\\build\\settings_apk\\settings_apk-debug.apk: Failure [INSTALL_FAILED_ALREADY_EXISTS: Attempt to re-install io.appium.settings without first uninstalling.]\r\n)",
      "time" : {
        "start" : 1587120621217,
        "stop" : 1587120621217,
        "duration" : 0
      }
    }, {
      "uid" : "8d1a4f58786e7032",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created.",
      "time" : {
        "start" : 1587116271148,
        "stop" : 1587116271148,
        "duration" : 0
      }
    }, {
      "uid" : "e7a484c44b411e90",
      "status" : "passed",
      "time" : {
        "start" : 1587043701999,
        "stop" : 1587043728056,
        "duration" : 26057
      }
    }, {
      "uid" : "72fb37b48e80f3e2",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1587039688932,
        "stop" : 1587039740562,
        "duration" : 51630
      }
    }, {
      "uid" : "fede1c3d64f6a",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1587037130644,
        "stop" : 1587037181842,
        "duration" : 51198
      }
    }, {
      "uid" : "b7ac7c2be4749422",
      "status" : "passed",
      "time" : {
        "start" : 1587030034896,
        "stop" : 1587030050852,
        "duration" : 15956
      }
    }, {
      "uid" : "7b0b78063151b977",
      "status" : "passed",
      "time" : {
        "start" : 1587022331410,
        "stop" : 1587022353510,
        "duration" : 22100
      }
    }, {
      "uid" : "fbe2253b770adaf6",
      "status" : "passed",
      "time" : {
        "start" : 1587018762959,
        "stop" : 1587018819587,
        "duration" : 56628
      }
    }, {
      "uid" : "f8d1d577b5ff5702",
      "status" : "passed",
      "time" : {
        "start" : 1587014134160,
        "stop" : 1587014155912,
        "duration" : 21752
      }
    }, {
      "uid" : "7cd5a50ed58c3f1c",
      "status" : "passed",
      "time" : {
        "start" : 1587011010943,
        "stop" : 1587011033362,
        "duration" : 22419
      }
    }, {
      "uid" : "151e013a2410055a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False == True\n  -False\n  +True",
      "time" : {
        "start" : 1587008270191,
        "stop" : 1587008288774,
        "duration" : 18583
      }
    }, {
      "uid" : "86637bc9df4e2ae7",
      "status" : "broken",
      "statusDetails" : "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4723): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000122966B9FD0>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。'))",
      "time" : {
        "start" : 1587005929903,
        "stop" : 1587005929903,
        "duration" : 0
      }
    }, {
      "uid" : "d583f1ab3ba07992",
      "status" : "passed",
      "time" : {
        "start" : 1586507252492,
        "stop" : 1586507273443,
        "duration" : 20951
      }
    }, {
      "uid" : "1970b1d9d5a0b420",
      "status" : "passed",
      "time" : {
        "start" : 1586158233117,
        "stop" : 1586158248683,
        "duration" : 15566
      }
    }, {
      "uid" : "c848626e95b40d7",
      "status" : "broken",
      "statusDetails" : "TypeError: click_more() missing 1 required positional argument: 'target'",
      "time" : {
        "start" : 1586146462372,
        "stop" : 1586146462372,
        "duration" : 0
      }
    }, {
      "uid" : "cc255edf72657794",
      "status" : "passed",
      "time" : {
        "start" : 1585821882116,
        "stop" : 1585821895109,
        "duration" : 12993
      }
    }, {
      "uid" : "966b00f080875df1",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'Base' object has no attribute 'init_driveer'",
      "time" : {
        "start" : 1585818159012,
        "stop" : 1585818159012,
        "duration" : 0
      }
    }, {
      "uid" : "45f3202f547ec08a",
      "status" : "passed",
      "time" : {
        "start" : 1585741022254,
        "stop" : 1585741035203,
        "duration" : 12949
      }
    }, {
      "uid" : "dab0e14ce5f6108c",
      "status" : "passed",
      "time" : {
        "start" : 1585723340593,
        "stop" : 1585723353788,
        "duration" : 13195
      }
    }, {
      "uid" : "7e43c454c6bc7dbe",
      "status" : "passed",
      "time" : {
        "start" : 1585722344830,
        "stop" : 1585722355994,
        "duration" : 11164
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "2f5740576c55b0f9",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/30/allure/#testresult/2f5740576c55b0f9",
        "status" : "passed",
        "time" : {
          "start" : 1587030034896,
          "stop" : 1587030050852,
          "duration" : 15956
        }
      }, {
        "uid" : "fe8ba757bcccc383",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/29/allure/#testresult/fe8ba757bcccc383",
        "status" : "passed",
        "time" : {
          "start" : 1587022331410,
          "stop" : 1587022353510,
          "duration" : 22100
        }
      }, {
        "uid" : "bb5cdce9c7d624b6",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/28/allure/#testresult/bb5cdce9c7d624b6",
        "status" : "passed",
        "time" : {
          "start" : 1587018762959,
          "stop" : 1587018819587,
          "duration" : 56628
        }
      }, {
        "uid" : "3d0a1b8fe42be53",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/27/allure/#testresult/3d0a1b8fe42be53",
        "status" : "passed",
        "time" : {
          "start" : 1587018762959,
          "stop" : 1587018819587,
          "duration" : 56628
        }
      }, {
        "uid" : "cf3557beb52dca88",
        "reportUrl" : "http://192.168.88.58:8080/job/Timing/26/allure/#testresult/cf3557beb52dca88",
        "status" : "passed",
        "time" : {
          "start" : 1587014134160,
          "stop" : 1587014155912,
          "duration" : 21752
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e55f365f99acc545.json",
  "parameterValues" : [ ]
}